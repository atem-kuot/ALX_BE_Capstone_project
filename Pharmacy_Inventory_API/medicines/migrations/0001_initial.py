# Generated by Django 5.2.5 on 2025-08-27 18:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Brand or generic name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Additional details about the medicine')),
                ('category', models.CharField(choices=[('ANTIBIOTIC', 'Antibiotic'), ('ANALGESIC', 'Analgesic (Pain Reliever)'), ('ANTIVIRAL', 'Antiviral'), ('ANTIFUNGAL', 'Antifungal'), ('ANTIPARASITIC', 'Antiparasitic'), ('ANTIDEPRESSANT', 'Antidepressant'), ('ANTIPSYCHOTIC', 'Antipsychotic'), ('ANTIHISTAMINE', 'Antihistamine'), ('BRONCHODILATOR', 'Bronchodilator'), ('CORTICOSTEROID', 'Corticosteroid'), ('DIURETIC', 'Diuretic'), ('ANTIHYPERTENSIVE', 'Antihypertensive'), ('ANTIDIABETIC', 'Antidiabetic'), ('ANTICOAGULANT', 'Anticoagulant'), ('ANTIPLATELET', 'Antiplatelet'), ('LIPID_LOWERING', 'Lipid-Lowering'), ('HORMONE', 'Hormone'), ('IMMUNOSUPPRESSANT', 'Immunosuppressant'), ('VACCINE', 'Vaccine'), ('VITAMIN_SUPPLEMENT', 'Vitamin & Supplement'), ('MINERAL', 'Mineral'), ('ELECTROLYTE', 'Electrolyte'), ('GASTROINTESTINAL', 'Gastrointestinal'), ('OPHTHALMIC', 'Ophthalmic'), ('OTIC', 'Otic (Ear)'), ('TOPICAL', 'Topical'), ('DERMATOLOGICAL', 'Dermatological'), ('CONTRACEPTIVE', 'Contraceptive'), ('UROLOGICAL', 'Urological'), ('ONCOLOGY', 'Oncology'), ('ANESTHETIC', 'Anesthetic'), ('SEDATIVE', 'Sedative'), ('STIMULANT', 'Stimulant'), ('ANTACID', 'Antacid'), ('LAXATIVE', 'Laxative'), ('ANTIDIARRHEAL', 'Antidiarrheal'), ('ANTIEMETIC', 'Antiemetic'), ('ANTIULCER', 'Antiulcer'), ('CARDIAC', 'Cardiac'), ('RESPIRATORY', 'Respiratory'), ('NEUROLOGICAL', 'Neurological'), ('PSYCHIATRIC', 'Psychiatric'), ('RHEUMATOLOGICAL', 'Rheumatological'), ('OTHER', 'Other')], max_length=50)),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Current stock count')),
                ('dosage', models.CharField(help_text='e.g., 500mg/tablet, 10mg/ml', max_length=50)),
                ('expiry_date', models.DateField(help_text='Format: YYYY-MM-DD')),
                ('threshold_alert', models.PositiveIntegerField(default=10, help_text='Low stock warning level')),
                ('is_active', models.BooleanField(default=True)),
                ('Date_Added', models.DateTimeField(auto_now_add=True)),
                ('Last_Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('U', 'Unknown')], default='U', max_length=1)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=20)),
                ('medical_history', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('Date_Added', models.DateTimeField(auto_now_add=True)),
                ('Last_Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Supplier company name', max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('email', models.EmailField(help_text='Primary contact email', max_length=254, unique=True)),
                ('phone', models.CharField(help_text='Format: +1234567890', max_length=20)),
                ('address', models.TextField(help_text='Full physical address')),
                ('Date_Added', models.DateTimeField(auto_now_add=True)),
                ('Last_Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('STOCK_ADD', 'Stock Added'), ('STOCK_REMOVE', 'Stock Removed'), ('STOCK_ADJUST', 'Stock Adjusted'), ('PRESCRIPTION_FULFILL', 'Prescription Fulfilled'), ('PRESCRIPTION_CANCELLED', 'Prescription Cancelled'), ('DISCARDED', 'Discarded (Expired/Damaged)'), ('RECEIVED', 'Received from Supplier')], max_length=50)),
                ('quantity_change', models.IntegerField(help_text='Positive for additions, negative for removals')),
                ('previous_quantity', models.IntegerField(help_text='Quantity before change')),
                ('new_quantity', models.IntegerField(help_text='Quantity after change')),
                ('reason', models.TextField(blank=True, help_text='Reason for the change')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_changes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
